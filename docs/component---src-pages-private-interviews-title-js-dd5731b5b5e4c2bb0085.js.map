{"version":3,"file":"component---src-pages-private-interviews-title-js-dd5731b5b5e4c2bb0085.js","mappings":"6IAiEA,IA9DiB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,EAAsB,IAAnBC,KAAAA,OAAmB,SAClCC,GAAWC,EAAAA,EAAAA,IAAe,cAa7BC,aAAaC,MAAMC,QAAO,qBAAGC,KAAgBP,KAC7CQ,MAEH,OACE,2BACE,0BAAKN,EAASO,MACd,kDACA,0BACGP,EAASQ,WAAWC,KAAI,SAACC,GAAD,OACvB,0BAAKA,OAGRX,EACC,6BACE,6BACE,0BACE,0BACE,iDAEF,0BACE,uDAIN,6BACE,0BACE,0BACE,0BACGC,EAASW,MAAMF,KAAI,SAACC,GAAD,OAClB,0BAAKA,QAIX,0BACE,0BACGV,EAASY,QAAQH,KAAI,SAACC,GAAD,OACpB,0BAAKA,WAOf,Q,oDCvDJG,EAAa,CACjBC,MAAO,UACPC,QAAS,GACTC,WAAY,4CAERC,EAAgB,CACpBC,UAAW,EACXC,aAAc,GACdC,SAAU,KAsBZ,UAlBkB,SAAC,GAAoC,IAAdC,EAAa,EAAjCA,KAAQC,WAC3B,OACE,wBAAMC,MAAOV,GACX,6BAAQQ,EAAKG,OACb,sBAAID,MAAON,GAAgBI,EAAKG,OAC/BH,EAAKI,SAAShB,KAAI,gBAAGiB,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,UAAtB,OACjB,gCACE,0BAAKD,GACJD,EACAE,EAAUnB,KAAI,SAACX,GAAD,OACb,gBAAC,IAAD,CAAUA,EAAGA,EAAGC,MAAI","sources":["webpack://my-gatsby-site/./src/components/question.js","webpack://my-gatsby-site/./src/pages/private/{interviews.title}.js"],"sourcesContent":["import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst Question = ({ q, full = false }) => {\n  const question = useStaticQuery(graphql`\n    query MyQuery {\n      allQuestions {\n        nodes {\n          id\n          follow_ups\n          great\n          text\n          warning\n        }\n      }\n    }\n  `)\n    .allQuestions.nodes.filter(({ id }) => id === q)\n    .pop();\n\n  return (\n    <div>\n      <h4>{question.text}</h4>\n      <h5>Possible follow-ups:</h5>\n      <ul>\n        {question.follow_ups.map((t) => (\n          <li>{t}</li>\n        ))}\n      </ul>\n      {full ? (\n        <table>\n          <thead>\n            <tr>\n              <td>\n                <strong>✅ Great signs:</strong>\n              </td>\n              <td>\n                <strong>⚠️ Warning signs: </strong>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <ul>\n                  {question.great.map((t) => (\n                    <li>{t}</li>\n                  ))}\n                </ul>\n              </td>\n              <td>\n                <ul>\n                  {question.warning.map((t) => (\n                    <li>{t}</li>\n                  ))}\n                </ul>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Question;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Question from \"../../components/question\";\n\n// styles\nconst pageStyles = {\n  color: \"#232129\",\n  padding: 96,\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n};\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n};\n\n// markup\nconst IndexPage = ({ data: { interviews: data } }) => {\n  return (\n    <main style={pageStyles}>\n      <title>{data.title}</title>\n      <h1 style={headingStyles}>{data.title}</h1>\n      {data.sections.map(({ description, name, questions }) => (\n        <>\n          <h2>{name}</h2>\n          {description}\n          {questions.map((q) => (\n            <Question q={q} full />\n          ))}\n        </>\n      ))}\n    </main>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query ($id: String) {\n    interviews(id: { eq: $id }) {\n      title\n      sections {\n        description\n        name\n        questions\n      }\n    }\n  }\n`;\n"],"names":["q","full","question","useStaticQuery","allQuestions","nodes","filter","id","pop","text","follow_ups","map","t","great","warning","pageStyles","color","padding","fontFamily","headingStyles","marginTop","marginBottom","maxWidth","data","interviews","style","title","sections","description","name","questions"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-interviews-interviews-title-js-7e2766f90d84d80ad8fe.js","mappings":"uLAgEA,EA7DiB,SAAC,GAAW,IAATA,EAAQ,EAARA,EACZC,GAAWC,EAAAA,EAAAA,IAAe,cAa7BC,aAAaC,MAAMC,QAAO,qBAAGC,KAAgBN,KAC7CO,MAGH,OAFAC,QAAQC,IAAIR,GAGV,2BACE,0BAAKA,EAASS,MACd,kDACA,0BACGT,EAASU,WAAWC,KAAI,SAACC,GAAD,OACvB,0BAAKA,OAGT,6BACE,6BACE,0BACE,0BACE,iDAEF,0BACE,uDAIN,6BACE,0BACE,0BACE,0BACGZ,EAASa,MAAMF,KAAI,SAACC,GAAD,OAClB,0BAAKA,QAIX,0BACE,0BACGZ,EAASc,QAAQH,KAAI,SAACC,GAAD,OACpB,0BAAKA,aChDjBG,EAAa,CACjBC,MAAO,UACPC,QAAS,GACTC,WAAY,4CAERC,EAAgB,CACpBC,UAAW,EACXC,aAAc,GACdC,SAAU,KAuBZ,EAnBkB,SAAC,GAAoC,IAAdC,EAAa,EAAjCA,KAAQC,WAG3B,OAFAjB,QAAQC,IAAIe,GAGV,wBAAME,MAAOV,GACX,6BAAQQ,EAAKG,OACb,sBAAID,MAAON,GAAgBI,EAAKG,OAC/BH,EAAKI,SAAShB,KAAI,gBAAGiB,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OACjB,gCACE,0BAAKD,GACJC,EAAUlB,KAAI,SAACZ,GAAD,OACb,gBAAC,EAAD,CAAUA,EAAGA","sources":["webpack://my-gatsby-site/./src/components/question.js","webpack://my-gatsby-site/./src/pages/interviews/{interviews.title}.js"],"sourcesContent":["import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst Question = ({ q }) => {\n  const question = useStaticQuery(graphql`\n    query MyQuery {\n      allQuestions {\n        nodes {\n          id\n          follow_ups\n          great\n          text\n          warning\n        }\n      }\n    }\n  `)\n    .allQuestions.nodes.filter(({ id }) => id === q)\n    .pop();\n  console.log(question);\n\n  return (\n    <div>\n      <h4>{question.text}</h4>\n      <h5>Possible follow-ups:</h5>\n      <ul>\n        {question.follow_ups.map((t) => (\n          <li>{t}</li>\n        ))}\n      </ul>\n      <table>\n        <thead>\n          <tr>\n            <td>\n              <strong>✅ Great signs:</strong>\n            </td>\n            <td>\n              <strong>⚠️ Warning signs: </strong>\n            </td>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <ul>\n                {question.great.map((t) => (\n                  <li>{t}</li>\n                ))}\n              </ul>\n            </td>\n            <td>\n              <ul>\n                {question.warning.map((t) => (\n                  <li>{t}</li>\n                ))}\n              </ul>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Question;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Question from \"../../components/question\";\n\n// styles\nconst pageStyles = {\n  color: \"#232129\",\n  padding: 96,\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n};\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n};\n\n// markup\nconst IndexPage = ({ data: { interviews: data } }) => {\n  console.log(data);\n\n  return (\n    <main style={pageStyles}>\n      <title>{data.title}</title>\n      <h1 style={headingStyles}>{data.title}</h1>\n      {data.sections.map(({ name, questions }) => (\n        <>\n          <h2>{name}</h2>\n          {questions.map((q) => (\n            <Question q={q} />\n          ))}\n        </>\n      ))}\n    </main>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query ($id: String) {\n    interviews(id: { eq: $id }) {\n      title\n      sections {\n        name\n        questions\n      }\n    }\n  }\n`;\n"],"names":["q","question","useStaticQuery","allQuestions","nodes","filter","id","pop","console","log","text","follow_ups","map","t","great","warning","pageStyles","color","padding","fontFamily","headingStyles","marginTop","marginBottom","maxWidth","data","interviews","style","title","sections","name","questions"],"sourceRoot":""}